name: CI â€” Pester tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) {
            pip install -r requirements.txt
          } else {
            pip install uvicorn fastapi pymongo
          }

      # Minimal .env for CI; NO SendGrid key => no emails will be sent
      - name: Create .env
        shell: pwsh
        run: |
          "SECRET_KEY=dev-secret-for-ci`nTENANT_DOMAIN=tenant1.lvh.me`nUSE_INMEMORY_DB=1" | Out-File -Encoding ASCII -NoNewline .env

      - name: Launch API
        shell: pwsh
        run: |
          # Create a simple start script to run the API
          @"
          import os
          os.environ['SECRET_KEY'] = 'dev-secret-for-ci'
          os.environ['TENANT_DOMAIN'] = 'tenant1.lvh.me'
          os.environ['USE_INMEMORY_DB'] = '1'
          
          import subprocess
          import sys
          
          subprocess.run([
              sys.executable, '-m', 'uvicorn', 
              'app.main:app', 
              '--host', '127.0.0.1', 
              '--port', '8000',
              '--log-level', 'info'
          ])
          "@ | Out-File -FilePath start_api.py -Encoding utf8
          
          # Start API in background
          $apiProcess = Start-Process python -ArgumentList 'start_api.py' -PassThru -WindowStyle Hidden
          Write-Host "Started API process: $($apiProcess.Id)"
          
          # Wait for startup and test
          $timeout = (Get-Date).AddSeconds(30)
          $attempts = 0
          do {
            $attempts++
            Write-Host "Attempt $attempts..."
            
            # Check if process is still running
            if (-not (Get-Process -Id $apiProcess.Id -ErrorAction SilentlyContinue)) {
              throw "API process died unexpectedly"
            }
            
            try {
              $response = (curl.exe -s -o NUL -w '%{http_code}' 'http://127.0.0.1:8000/health' -H 'Host: tenant1.lvh.me')
              Write-Host "Response: $response"
              if ($response -eq '200') { 
                Write-Host "API is ready!"
                break 
              }
            } catch {
              Write-Host "Request error: $_"
            }
            Start-Sleep -Seconds 2
          } while ((Get-Date) -lt $timeout)
          
          if ($response -ne '200') { 
            Write-Host "Process still running: $(Get-Process -Id $apiProcess.Id -ErrorAction SilentlyContinue)"
            throw 'API failed to start - final response: ' + $response
          }
          
          Write-Host "API started successfully!"

      - name: Install Pester 5
        shell: pwsh
        run: |
          Install-Module Pester -MinimumVersion 5.0.0 -Force -Scope CurrentUser
          Import-Module Pester -MinimumVersion 5.0.0 -Force

      - name: Run tests
        shell: pwsh
        env:
          HOST: tenant1.lvh.me
        run: |
          Invoke-Pester .\tests\*.Tests.ps1 -CI

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-logs
          path: logs/**/*.log
