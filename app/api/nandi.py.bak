from fastapi import APIRouter, Depends, Request, Body
from bson.json_util import dumps
from starlette.responses import Response
from app.deps import get_db
from datetime import datetime

router = APIRouter()

@router.get("/nandi/events")
async def nandi_events(request: Request, db=Depends(get_db)):
    tenant = (getattr(getattr(request,"state",None),"tenant",None) or request.headers.get("Host","default")).split(".")[0]
    col = db[f"{tenant}_nandi"]
    docs = list(col.find().sort("timestamp", -1))
    return Response(dumps({"results": docs}), media_type="application/json")

@router.post("/nandi/events/seed")
async def nandi_events_seed(request: Request, db=Depends(get_db), events: list[dict]=Body(...)):
    tenant = (getattr(getattr(request,"state",None),"tenant",None) or request.headers.get("Host","default")).split(".")[0]
    col = db[f"{tenant}_nandi"]
    if isinstance(events, dict):
        events = [events]
    for e in events:
        e.setdefault("timestamp", datetime.utcnow().isoformat()+"Z")
    res = col.insert_many(events)
    return Response(dumps({"inserted": len(res.inserted_ids)}), media_type="application/json")
